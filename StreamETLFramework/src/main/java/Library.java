import java.util.Properties;
import java.util.concurrent.ExecutionException;

import org.apache.kafka.clients.producer.Callback;
import org.apache.kafka.clients.producer.KafkaProducer;
import org.apache.kafka.clients.producer.ProducerConfig;
import org.apache.kafka.clients.producer.ProducerRecord;
import org.apache.kafka.clients.producer.RecordMetadata;
import org.apache.kafka.common.serialization.StringSerializer;


/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class Library {
    /**
     * @param args
     */
    public static void main(String[] args) {
    	Properties prop=new Properties();
    	 Properties props = new Properties();
         props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG,
                                             "96.66.74.61:9092");
         props.put(ProducerConfig.CLIENT_ID_CONFIG, "KafkaExampleProducer");
         props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG,
                                         StringSerializer.class.getName());
         props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG,
                                     StringSerializer.class.getName());
         props.put(ProducerConfig.LINGER_MS_CONFIG, "1");
		KafkaProducer producer=new KafkaProducer(props);
		
		try {
			producer.send(new ProducerRecord<String, String>("jmx_test", "This is test"),new Callback() {
				
				@Override
				public void onCompletion(RecordMetadata metadata, Exception exception) {
					if(exception!=null) {
						System.out.println(exception.toString());
					}
					else {
						System.out.println(metadata.partition());
							
					}
					
				}
			}).get();
		} catch (InterruptedException | ExecutionException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}
